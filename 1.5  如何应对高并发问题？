问题：
如何应对高并发问题？

参考答案：
1.HTML静态化，消耗最小的纯静态化的html页面避免大量的数据库访问请求
2.分离图片服务器,对于web服务器来说,图片是最消耗资源的将图片资源和页面资源进行分离,进行不同的配置优化,保证更改的系统消耗和执行效率
3.数据库集群和库表散列,数据库集群由于在架构、成本、扩张性方面都会受到所采用的关系型的限制，在应用程序安装业务和功能模块将数据库进行分离，不同的模块对应不同的数据库或者表，再进行更小的数据库散列，最终可以再配置让系统随时增加数据库补充系统性能；
4.缓存，使用外加的redis模块进行缓存，减轻数据库访问压力
5.负载均衡，在服务器集群中需一台服务器调度角色Nginx，用户所有请求先由它接收，在分配某台服务器去处理；实现负载均衡：http重定向实现，DNS匹配，反向代理
6.动静态分离,对于动态请求交给Tomcat而其他静态请求,搭建专门的静态资源服务器,使用nginx进行请求分发
